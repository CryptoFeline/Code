contract Contract {
    function main() {
        memory[0x40:0x60] = 0x80;
        var var0 = msg.value;
    
        if (var0) { revert(memory[0x00:0x00]); }
    
        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }
    
        var0 = msg.data[0x00:0x20] >> 0xe0;
    
        if (var0 == 0x0d917df4) {
            // Dispatch table entry for 0x0d917df4 (unknown)
            var var1 = 0x006b;
            var var2 = 0x0066;
            var var3 = msg.data.length - 0x04 + 0x04;
            var var4 = 0x04;
            var2 = func_068D(var3, var4);
            var1 = func_0066(var2);
            var temp0 = var1;
            var1 = 0x0078;
            var2 = temp0;
            var3 = memory[0x40:0x60];
            var1 = func_06FB(var2, var3);
            var temp1 = memory[0x40:0x60];
            return memory[temp1:temp1 + var1 - temp1];
        } else if (var0 == 0x25ff967e) {
            // Dispatch table entry for 0x25ff967e (unknown)
            var1 = 0x009b;
            var2 = 0x0096;
            var4 = 0x04;
            var3 = var4 + (msg.data.length - var4);
            var2 = func_085C(var3, var4);
            func_0096(var2);
            stop();
        } else if (var0 == 0xaaf10f42) {
            // Dispatch table entry for getImplementation()
            var1 = 0x00a5;
            var1 = func_035B();
            var temp2 = var1;
            var1 = 0x00b2;
            var2 = temp2;
            var3 = memory[0x40:0x60];
            var1 = func_06FB(var2, var3);
            var temp3 = memory[0x40:0x60];
            return memory[temp3:temp3 + var1 - temp3];
        } else if (var0 == 0xc7fcb49b) {
            // Dispatch table entry for 0xc7fcb49b (unknown)
            var1 = 0x00d5;
            var2 = 0x00d0;
            var4 = 0x04;
            var3 = var4 + (msg.data.length - var4);
            var2, var3 = func_08DB(var3, var4);
            var1, var2, var3 = func_00D0(var2, var3);
            var temp4 = var1;
            var1 = 0x00e4;
            var temp5 = var2;
            var2 = temp4;
            var temp6 = var3;
            var3 = temp5;
            var var5 = memory[0x40:0x60];
            var4 = temp6;
            var1 = func_0939(var2, var3, var4, var5);
            var temp7 = memory[0x40:0x60];
            return memory[temp7:temp7 + var1 - temp7];
        } else { revert(memory[0x00:0x00]); }
    }
    
    function func_0066(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff == msg.sender) {
            var var1 = 0x00;
            var var2 = 0x01;
            var var3 = 0x018c;
            var var4 = storage[var2];
            var3 = func_0A1C(var4);
            var temp0 = var3;
            var temp1 = memory[0x40:0x60];
            memory[0x40:0x60] = temp1 + (temp0 + 0x1f) / 0x20 * 0x20 + 0x20;
            var temp2 = var2;
            var2 = temp1;
            var3 = temp2;
            var4 = temp0;
            memory[var2:var2 + 0x20] = var4;
            var var5 = var2 + 0x20;
            var var6 = var3;
            var var8 = storage[var6];
            var var7 = 0x01b8;
            var7 = func_0A1C(var8);
        
            if (!var7) {
            label_0205:
                var temp3 = var2;
                var1 = temp3;
                var temp4 = memory[0x40:0x60];
                memory[0x40:0x60] = temp4 + 0x40;
                memory[temp4:temp4 + 0x20] = 0x1d;
                memory[temp4 + 0x20:temp4 + 0x20 + 0x20] = 0x5860208158601c335a63aaf10f428752fa158151803b80938091923cf3000000;
                var2 = temp4;
                var temp5 = new(memory[var1 + 0x20:var1 + 0x20 + memory[var1:var1 + 0x20]]).value(0x00)();
                var3 = temp5;
                storage[0x02] = (var3 & 0xffffffffffffffffffffffffffffffffffffffff) | (storage[0x02] & ~0xffffffffffffffffffffffffffffffffffffffff);
                var4 = var2 + 0x20;
                var5 = memory[var2:var2 + 0x20];
                var temp6 = new(memory[var4:var4 + var5]).value(0x00).salt(arg0)();
                var temp7 = temp6;
                var0 = temp7;
            
                if (var0) { return var0; }
                else { revert(memory[0x00:0x00]); }
            } else if (0x1f < var7) {
                var temp8 = var5;
                var temp9 = temp8 + var7;
                var5 = temp9;
                memory[0x00:0x20] = var6;
                var temp10 = keccak256(memory[0x00:0x20]);
                memory[temp8:temp8 + 0x20] = storage[temp10];
                var6 = temp10 + 0x01;
                var7 = temp8 + 0x20;
            
                if (var5 <= var7) { goto label_01FC; }
            
            label_01E8:
                var temp11 = var6;
                var temp12 = var7;
                memory[temp12:temp12 + 0x20] = storage[temp11];
                var6 = temp11 + 0x01;
                var7 = temp12 + 0x20;
            
                if (var5 > var7) { goto label_01E8; }
            
            label_01FC:
                var temp13 = var5;
                var temp14 = temp13 + (var7 - temp13 & 0x1f);
                var7 = temp13;
                var5 = temp14;
                goto label_0205;
            } else {
                var temp15 = var5;
                memory[temp15:temp15 + 0x20] = storage[var6] / 0x0100 * 0x0100;
                var5 = temp15 + 0x20;
                var7 = var7;
                goto label_0205;
            }
        } else {
            var temp16 = memory[0x40:0x60];
            memory[temp16:temp16 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            var2 = temp16 + 0x04;
            var1 = 0x0174;
            var1 = func_09CD(var2);
            var temp17 = memory[0x40:0x60];
            revert(memory[temp17:temp17 + var1 - temp17]);
        }
    }
    
    function func_0096(var arg0) {
        if (storage[0x00] & 0xffffffffffffffffffffffffffffffffffffffff == msg.sender) {
            var var0 = 0x01;
            var var1 = 0x0357;
            var var2 = arg0;
            var var3 = var0;
            func_0C04(var2, var3);
        
        label_0357:
            return;
        } else {
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = 0x08c379a000000000000000000000000000000000000000000000000000000000;
            var1 = temp0 + 0x04;
            var0 = 0x033f;
            var0 = func_09CD(var1);
            var temp1 = memory[0x40:0x60];
            revert(memory[temp1:temp1 + var0 - temp1]);
        }
    }
    
    function func_00D0(var arg0, var arg1) returns (var r0, var arg0, var arg1) {
        var var0 = 0x00;
        var var1 = var0;
        var var2 = 0x00;
        var temp0 = memory[0x40:0x60];
        memory[0x40:0x60] = temp0 + 0x40;
        memory[temp0:temp0 + 0x20] = 0x1d;
        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x5860208158601c335a63aaf10f428752fa158151803b80938091923cf3000000;
        var var3 = temp0;
        var var4 = keccak256(memory[var3 + 0x20:var3 + 0x20 + memory[var3:var3 + 0x20]]);
        var var5 = arg1;
        var var6 = 0x00 << 0x00;
        var var7 = 0x00;
        var var8 = var7;
    
        if (var8 >= 0x03e8) {
        label_062D:
            arg1 = var5;
            arg0 = var7;
            r0 = var6;
            return r0, arg0, arg1;
        } else {
        label_03EB:
            var var9 = 0x00;
            var var10 = 0x0401;
            var var11 = address(this);
            var var12 = arg0;
            var var14 = memory[0x40:0x60] + 0x20;
            var var13 = var4;
            var10 = func_0D96(var11, var12, var13, var14);
            var temp1 = memory[0x40:0x60];
            var temp2 = var10;
            memory[temp1:temp1 + 0x20] = temp2 - temp1 - 0x20;
            memory[0x40:0x60] = temp2;
            var9 = keccak256(memory[temp1 + 0x20:temp1 + 0x20 + memory[temp1:temp1 + 0x20]]) >> 0x00;
            var10 = 0x00;
        
            if (!(var9 & 0xff00000000000000000000000000000000000000)) {
                var10 = var10 + 0x01;
            
                if (var9 & 0xff000000000000000000000000000000000000) { goto label_0461; }
                else { goto label_045B; }
            } else if (var9 & 0xff000000000000000000000000000000000000) {
            label_0461:
            
                if (var9 & 0xff0000000000000000000000000000000000) {
                label_0481:
                
                    if (var9 & 0xff00000000000000000000000000000000) {
                    label_04A0:
                    
                        if (var9 & 0xff000000000000000000000000000000) {
                        label_04BE:
                        
                            if (var9 & 0xff0000000000000000000000000000) {
                            label_04DB:
                            
                                if (var9 & 0xff00000000000000000000000000) {
                                label_04F7:
                                
                                    if (var9 & 0xff000000000000000000000000) {
                                    label_0512:
                                    
                                        if (var9 & 0xff0000000000000000000000) {
                                        label_052C:
                                        
                                            if (var9 & 0xff00000000000000000000) {
                                            label_0545:
                                            
                                                if (var9 & 0xff000000000000000000) {
                                                label_055D:
                                                
                                                    if (var9 & 0xff0000000000000000) {
                                                    label_0574:
                                                    
                                                        if (var9 & 0xff00000000000000) {
                                                        label_058A:
                                                        
                                                            if (var9 & 0xff000000000000) {
                                                            label_059F:
                                                            
                                                                if (var9 & 0xff0000000000) {
                                                                label_05B3:
                                                                
                                                                    if (var9 & 0xff00000000) {
                                                                    label_05C6:
                                                                    
                                                                        if (var9 & 0xff000000) {
                                                                        label_05D8:
                                                                        
                                                                            if (var9 & 0xff0000) {
                                                                            label_05E9:
                                                                            
                                                                                if (var9 & 0xff00) {
                                                                                label_05F9:
                                                                                
                                                                                    if (var9 & 0xff) {
                                                                                    label_0608:
                                                                                    
                                                                                        if (var10 <= var5) {
                                                                                        label_061A:
                                                                                            arg0 = arg0 + 0x01;
                                                                                            var8 = var8 + 0x01;
                                                                                        
                                                                                        label_03E0:
                                                                                        
                                                                                            if (var8 >= 0x03e8) { goto label_062D; }
                                                                                            else { goto label_03EB; }
                                                                                        } else {
                                                                                        label_0611:
                                                                                            var5 = var10;
                                                                                            var6 = arg0;
                                                                                            var7 = var9;
                                                                                            arg0 = var6 + 0x01;
                                                                                            var8 = var8 + 0x01;
                                                                                            goto label_03E0;
                                                                                        }
                                                                                    } else {
                                                                                    label_0602:
                                                                                        var temp3 = var10 + 0x01;
                                                                                        var10 = temp3;
                                                                                    
                                                                                        if (var10 <= var5) { goto label_061A; }
                                                                                        else { goto label_0611; }
                                                                                    }
                                                                                } else {
                                                                                label_05F3:
                                                                                    var10 = var10 + 0x01;
                                                                                
                                                                                    if (var9 & 0xff) { goto label_0608; }
                                                                                    else { goto label_0602; }
                                                                                }
                                                                            } else {
                                                                            label_05E3:
                                                                                var10 = var10 + 0x01;
                                                                            
                                                                                if (var9 & 0xff00) { goto label_05F9; }
                                                                                else { goto label_05F3; }
                                                                            }
                                                                        } else {
                                                                        label_05D2:
                                                                            var10 = var10 + 0x01;
                                                                        
                                                                            if (var9 & 0xff0000) { goto label_05E9; }
                                                                            else { goto label_05E3; }
                                                                        }
                                                                    } else {
                                                                    label_05C0:
                                                                        var10 = var10 + 0x01;
                                                                    
                                                                        if (var9 & 0xff000000) { goto label_05D8; }
                                                                        else { goto label_05D2; }
                                                                    }
                                                                } else {
                                                                label_05AD:
                                                                    var10 = var10 + 0x01;
                                                                
                                                                    if (var9 & 0xff00000000) { goto label_05C6; }
                                                                    else { goto label_05C0; }
                                                                }
                                                            } else {
                                                            label_0599:
                                                                var10 = var10 + 0x01;
                                                            
                                                                if (var9 & 0xff0000000000) { goto label_05B3; }
                                                                else { goto label_05AD; }
                                                            }
                                                        } else {
                                                        label_0584:
                                                            var10 = var10 + 0x01;
                                                        
                                                            if (var9 & 0xff000000000000) { goto label_059F; }
                                                            else { goto label_0599; }
                                                        }
                                                    } else {
                                                    label_056E:
                                                        var10 = var10 + 0x01;
                                                    
                                                        if (var9 & 0xff00000000000000) { goto label_058A; }
                                                        else { goto label_0584; }
                                                    }
                                                } else {
                                                label_0557:
                                                    var10 = var10 + 0x01;
                                                
                                                    if (var9 & 0xff0000000000000000) { goto label_0574; }
                                                    else { goto label_056E; }
                                                }
                                            } else {
                                            label_053F:
                                                var10 = var10 + 0x01;
                                            
                                                if (var9 & 0xff000000000000000000) { goto label_055D; }
                                                else { goto label_0557; }
                                            }
                                        } else {
                                        label_0526:
                                            var10 = var10 + 0x01;
                                        
                                            if (var9 & 0xff00000000000000000000) { goto label_0545; }
                                            else { goto label_053F; }
                                        }
                                    } else {
                                    label_050C:
                                        var10 = var10 + 0x01;
                                    
                                        if (var9 & 0xff0000000000000000000000) { goto label_052C; }
                                        else { goto label_0526; }
                                    }
                                } else {
                                label_04F1:
                                    var10 = var10 + 0x01;
                                
                                    if (var9 & 0xff000000000000000000000000) { goto label_0512; }
                                    else { goto label_050C; }
                                }
                            } else {
                            label_04D5:
                                var10 = var10 + 0x01;
                            
                                if (var9 & 0xff00000000000000000000000000) { goto label_04F7; }
                                else { goto label_04F1; }
                            }
                        } else {
                        label_04B8:
                            var10 = var10 + 0x01;
                        
                            if (var9 & 0xff0000000000000000000000000000) { goto label_04DB; }
                            else { goto label_04D5; }
                        }
                    } else {
                    label_049A:
                        var10 = var10 + 0x01;
                    
                        if (var9 & 0xff000000000000000000000000000000) { goto label_04BE; }
                        else { goto label_04B8; }
                    }
                } else {
                label_047B:
                    var10 = var10 + 0x01;
                
                    if (var9 & 0xff00000000000000000000000000000000) { goto label_04A0; }
                    else { goto label_049A; }
                }
            } else {
            label_045B:
                var10 = var10 + 0x01;
            
                if (var9 & 0xff0000000000000000000000000000000000) { goto label_0481; }
                else { goto label_047B; }
            }
        }
    }
    
    function func_035B() returns (var r0) { return storage[0x02] & 0xffffffffffffffffffffffffffffffffffffffff; }
    
    function func_0643() returns (var r0) { return memory[0x40:0x60]; }
    
    function func_0657(var arg0) returns (var r0) { return arg0; }
    
    function func_0661(var arg0) {
        var var0 = 0x066a;
        var var1 = arg0;
        var0 = func_0657(var1);
    
        if (arg0 == var0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_0678(var arg0, var arg1) returns (var r0) {
        var var0 = msg.data[arg1:arg1 + 0x20];
        var var1 = 0x0687;
        var var2 = var0;
        func_0661(var2);
        return var0;
    }
    
    function func_068D(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i>= 0x20) {
            var var1 = 0x00;
            var var2 = 0x06b1;
            var var3 = arg0;
            var var4 = arg1 + var1;
            return func_0678(var3, var4);
        } else {
            var1 = 0x06a2;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_06BA(var arg0) returns (var r0) { return arg0 & 0xffffffffffffffffffffffffffffffffffffffff; }
    
    function func_06DA(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x06e5;
        var var2 = arg0;
        return func_06BA(var2);
    }
    
    function func_06EC(var arg0, var arg1) {
        var var0 = 0x06f5;
        var var1 = arg1;
        var0 = func_06DA(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_06FB(var arg0, var arg1) returns (var r0) {
        var temp0 = arg1;
        var var0 = temp0 + 0x20;
        var var1 = 0x0710;
        var var2 = temp0;
        var var3 = arg0;
        func_06EC(var2, var3);
        return var0;
    }
    
    function func_0720(var arg0) returns (var r0) { return arg0 + 0x1f & ~0x1f; }
    
    function func_0760(var arg0, var arg1) {
        var var0 = 0x0769;
        var var1 = arg0;
        var0 = func_0720(var1);
        var temp0 = arg1;
        var temp1 = temp0 + var0;
        var0 = temp1;
    
        if (!((var0 > 0xffffffffffffffff) | (var0 < temp0))) {
            memory[0x40:0x60] = var0;
            return;
        } else {
            var1 = 0x0787;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_07AC(var arg0) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 <= 0xffffffffffffffff) {
            var var1 = 0x07d0;
            var var2 = arg0;
            var1 = func_0720(var2);
            return var1 + 0x20;
        } else {
            var1 = 0x07c6;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_07DD(var arg0, var arg1, var arg2) {
        var temp0 = arg0;
        var temp1 = arg1;
        memory[temp1:temp1 + temp0] = msg.data[arg2:arg2 + temp0];
        memory[temp1 + temp0:temp1 + temp0 + 0x20] = 0x00;
    }
    
    function func_07EC(var arg0, var arg1, var arg2) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x07ff;
        var var2 = 0x07fa;
        var var3 = arg1;
        var2 = func_07AC(var3);
        var1 = func_07FA(var2);
        var temp0 = var1;
        var0 = temp0;
        var temp1 = arg1;
        memory[var0:var0 + 0x20] = temp1;
        var1 = var0 + 0x20;
    
        if (arg2 + temp1 <= arg0) {
            var2 = 0x0826;
            var3 = arg1;
            var var4 = var1;
            var var5 = arg2;
            func_07DD(var3, var4, var5);
            return var0;
        } else {
            var2 = 0x081a;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_07FA(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x079b;
        var1 = func_0643();
        var temp0 = var1;
        var0 = temp0;
        var1 = 0x07a7;
        var var2 = arg0;
        var var3 = var0;
        func_0760(var2, var3);
        return var0;
    }
    
    function func_082E(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg1 + 0x1f i< arg0) {
            var temp0 = arg1;
            var var1 = msg.data[temp0:temp0 + 0x20];
            var var2 = 0x0853;
            var var3 = arg0;
            var var4 = var1;
            var var5 = temp0 + 0x20;
            return func_07EC(var3, var4, var5);
        } else {
            var1 = 0x0842;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_085C(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
    
        if (arg0 - arg1 i>= 0x20) {
            var var1 = msg.data[arg1:arg1 + 0x20];
        
            if (var1 <= 0xffffffffffffffff) {
                var var2 = 0x089c;
                var var3 = arg0;
                var var4 = arg1 + var1;
                return func_082E(var3, var4);
            } else {
                var2 = 0x088f;
                revert(memory[0x00:0x00]);
            }
        } else {
            var1 = 0x0871;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_08A5(var arg0) returns (var r0) { return arg0; }
    
    function func_08AF(var arg0) {
        var var0 = 0x08b8;
        var var1 = arg0;
        var0 = func_08A5(var1);
    
        if (arg0 == var0) { return; }
        else { revert(memory[0x00:0x00]); }
    }
    
    function func_08C6(var arg0, var arg1) returns (var r0) {
        var var0 = msg.data[arg1:arg1 + 0x20];
        var var1 = 0x08d5;
        var var2 = var0;
        func_08AF(var2);
        return var0;
    }
    
    function func_08DB(var arg0, var arg1) returns (var r0, var arg0) {
        var var0 = 0x00;
        var var1 = var0;
    
        if (arg0 - arg1 i>= 0x40) {
            var var2 = 0x00;
            var var3 = 0x0900;
            var var4 = arg0;
            var var5 = arg1 + var2;
            var3 = func_0678(var4, var5);
            var0 = var3;
            var2 = 0x20;
            var3 = 0x0911;
            var4 = arg0;
            var5 = arg1 + var2;
            var3 = func_08C6(var4, var5);
            arg0 = var3;
            r0 = var0;
            return r0, arg0;
        } else {
            var2 = 0x08f1;
            revert(memory[0x00:0x00]);
        }
    }
    
    function func_091B(var arg0, var arg1) {
        var var0 = 0x0924;
        var var1 = arg1;
        var0 = func_0657(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_092A(var arg0, var arg1) {
        var var0 = 0x0933;
        var var1 = arg1;
        var0 = func_08A5(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_0939(var arg0, var arg1, var arg2, var arg3) returns (var r0) {
        var temp0 = arg3;
        var var0 = temp0 + 0x60;
        var var1 = 0x094e;
        var var2 = temp0;
        var var3 = arg0;
        func_091B(var2, var3);
        var1 = 0x095b;
        var2 = arg3 + 0x20;
        var3 = arg1;
        func_06EC(var2, var3);
        var1 = 0x0968;
        var2 = arg3 + 0x40;
        var3 = arg2;
        func_092A(var2, var3);
        return var0;
    }
    
    function func_0970(var arg0, var arg1) returns (var r0) {
        var temp0 = arg1;
        memory[temp0:temp0 + 0x20] = arg0;
        return temp0 + 0x20;
    }
    
    function func_0981(var arg0) {
        memory[arg0:arg0 + 0x20] = 0x666b206f66660000000000000000000000000000000000000000000000000000;
    }
    
    function func_09AA(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x09b7;
        var var2 = 0x06;
        var var3 = arg0;
        var1 = func_0970(var2, var3);
        var temp0 = var1;
        arg0 = temp0;
        var1 = 0x09c2;
        var2 = arg0;
        func_0981(var2);
        return arg0 + 0x20;
    }
    
    function func_09CD(var arg0) returns (var r0) {
        var temp0 = arg0;
        var var0 = temp0 + 0x20;
        memory[temp0:temp0 + 0x20] = var0 - temp0;
        var var1 = 0x09e6;
        var var2 = var0;
        return func_09AA(var2);
    }
    
    function func_0A1C(var arg0) returns (var r0) {
        var temp0 = arg0;
        var var0 = temp0 / 0x02;
        var var1 = temp0 & 0x01;
    
        if (!var1) {
            var temp1 = var0 & 0x7f;
            var0 = temp1;
        
            if (var1 - (var0 < 0x20)) { goto label_0A47; }
            else { goto label_0A3F; }
        } else if (var1 - (var0 < 0x20)) {
        label_0A47:
            return var0;
        } else {
        label_0A3F:
            var var2 = 0x0a46;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x22;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_0A4D(var arg0) returns (var r0) { return memory[arg0:arg0 + 0x20]; }
    
    function func_0A58(var arg0) returns (var r0) {
        memory[0x00:0x20] = arg0;
        return keccak256(memory[0x00:0x20]);
    }
    
    function func_0A6D(var arg0) returns (var r0) { return (arg0 + 0x1f) / 0x20; }
    
    function func_0A7D(var arg0, var arg1) returns (var r0) { return arg0 << arg1; }
    
    function func_0AE6(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0b01;
        var var2 = 0x0afc;
        var var3 = 0x0af7;
        var var4 = arg0;
        var3 = func_08A5(var4);
        var2 = func_0AF7(var3);
        return func_0AFC(var2);
    }
    
    function func_0AF7(var arg0) returns (var r0) { return arg0; }
    
    function func_0AFC(var arg0) returns (var r0) {
        r0 = func_08A5(arg0);
        // Error: Could not resolve method call return address!
    }
    
    function func_0B08(var arg0) returns (var r0) { return arg0; }
    
    function func_0B12(var arg0, var arg1, var arg2) {
        var var0 = 0x0b1b;
        var var1 = arg0;
        var0 = func_0AE6(var1);
        var1 = 0x0b2f;
        var var2 = 0x0b27;
        var var3 = var0;
        var2 = func_0B08(var3);
        var1 = func_0B27(arg1, arg2, var2);
        storage[arg2] = var1;
    }
    
    function func_0B27(var arg0, var arg1, var arg2) returns (var r0) {
        var var0 = arg0;
        var var1 = storage[arg1];
        var var2 = 0x00;
        var var3 = var0 * 0x08;
        var var4 = 0x0aba;
        var var5 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
        var var6 = var3;
        var4 = func_0A7D(var5, var6);
        var5 = 0x0ac4;
        var6 = arg2;
        var var7 = var3;
        var5 = func_0A7D(var6, var7);
        var temp0 = var4;
        return (var1 & ~temp0) | (var5 & temp0);
    }
    
    function func_0B37() returns (var r0) { return 0x00; }
    
    function func_0B3C(var arg0, var arg1) {
        var var0 = 0x0b44;
        var0 = func_0B37();
        var var1 = 0x0b4f;
        var var2 = var0;
        var var3 = arg0;
        var var4 = arg1;
        func_0B12(var2, var3, var4);
    }
    
    function func_0B77(var arg0, var arg1, var arg2) {
        if (arg1 <= 0x1f) {
        label_0BB8:
            return;
        } else {
            var var0 = 0x0b89;
            var var1 = arg2;
            var0 = func_0A58(var1);
            var1 = 0x0b92;
            var var2 = arg0;
            var1 = func_0A6D(var2);
            var1 = var0 + var1;
        
            if (arg0 >= 0x20) {
                var2 = 0x0bb5;
                var var3 = 0x0bad;
                var var4 = arg1;
                var3 = func_0A6D(var4);
                func_0BAD(var0, var1, var3);
            
            label_0BB5:
                goto label_0BB8;
            } else {
                var1 = var0;
                var2 = 0x0bb5;
                var3 = 0x0bad;
                var4 = arg1;
                var3 = func_0A6D(var4);
                func_0BAD(var0, var1, var3);
                goto label_0BB5;
            }
        }
    }
    
    function func_0BAD(var arg0, var arg1, var arg2) {
        arg2 = arg0 + arg2;
        var var0 = arg1;
    
        if (var0 >= arg2) {
        label_0B73:
            return;
        } else {
        label_0B5E:
            var var1 = 0x0b68;
            var var2 = 0x00;
            var var3 = var0;
            func_0B3C(var2, var3);
            var0 = var0 + 0x01;
        
            if (var0 >= arg2) { goto label_0B73; }
            else { goto label_0B5E; }
        }
    }
    
    function func_0BBD(var arg0, var arg1) returns (var r0) { return arg0 >> arg1; }
    
    function func_0BCA(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0bdb;
        var var2 = ~0x00;
        var var3 = arg0 * 0x08;
        var1 = func_0BBD(var2, var3);
        return arg1 & ~var1;
    }
    
    function func_0BE8(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0bf4;
        var var2 = arg0;
        var var3 = arg1;
        var1 = func_0BCA(var2, var3);
        return var1 | arg0 * 0x02;
    }
    
    function func_0C04(var arg0, var arg1) {
        var var0 = 0x0c0d;
        var var1 = arg0;
        var0 = func_0A4D(var1);
    
        if (var0 <= 0xffffffffffffffff) {
            var1 = 0x0c30;
            var var2 = storage[arg1];
            var1 = func_0A1C(var2);
            var2 = 0x0c3b;
            var var3 = var0;
            var var4 = var1;
            var var5 = arg1;
            func_0B77(var3, var4, var5);
            var2 = 0x20;
            var3 = var0 > 0x1f;
        
            if (var3 == 0x01) {
                var4 = var0 & ~0x1f;
                var5 = 0x0c7c;
                var var6 = arg1;
                var5 = func_0A58(var6);
                var6 = 0x00;
            
                if (var6 >= var4) {
                label_0CA4:
                
                    if (var4 >= var0) {
                    label_0CC1:
                        storage[arg1] = var0 * 0x02 + 0x01;
                        return;
                    } else {
                        var var7 = memory[arg0 + var2:arg0 + var2 + 0x20];
                        var var8 = 0x0cbd;
                        var var9 = var0 & 0x1f;
                        var var10 = var7;
                        var8 = func_0BCA(var9, var10);
                        storage[var5] = var8;
                        goto label_0CC1;
                    }
                } else {
                label_0C88:
                    var temp0 = var2;
                    var temp1 = var5;
                    storage[temp1] = memory[arg0 + temp0:arg0 + temp0 + 0x20];
                    var5 = temp1 + 0x01;
                    var2 = temp0 + 0x20;
                    var6 = var6 + 0x20;
                
                    if (var6 >= var4) { goto label_0CA4; }
                    else { goto label_0C88; }
                }
            } else {
                var4 = 0x00;
            
                if (!var0) {
                    var5 = 0x0c66;
                    var6 = var0;
                    var7 = var4;
                    var5 = func_0BE8(var6, var7);
                
                label_0C66:
                    storage[arg1] = var5;
                    return;
                } else {
                    var4 = memory[arg0 + var2:arg0 + var2 + 0x20];
                    var5 = 0x0c66;
                    var6 = var0;
                    var7 = var4;
                    var5 = func_0BE8(var6, var7);
                    goto label_0C66;
                }
            }
        } else {
            var1 = 0x0c25;
            memory[0x00:0x20] = 0x4e487b7100000000000000000000000000000000000000000000000000000000;
            memory[0x04:0x24] = 0x41;
            revert(memory[0x00:0x24]);
        }
    }
    
    function func_0CD6(var arg0, var arg1) returns (var r0) { return arg1; }
    
    function func_0CE1(var arg0) {
        memory[arg0:arg0 + 0x20] = 0xff00000000000000000000000000000000000000000000000000000000000000;
    }
    
    function func_0D0A(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0d17;
        var var2 = 0x01;
        var var3 = arg0;
        var1 = func_0CD6(var2, var3);
        var temp0 = var1;
        arg0 = temp0;
        var1 = 0x0d22;
        var2 = arg0;
        func_0CE1(var2);
        return arg0 + 0x01;
    }
    
    function func_0D2D(var arg0) returns (var r0) { return arg0 << 0x60; }
    
    function func_0D3A(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0d45;
        var var2 = arg0;
        return func_0D2D(var2);
    }
    
    function func_0D5E(var arg0, var arg1) {
        var var0 = 0x0d6f;
        var var1 = 0x0d6a;
        var var2 = arg1;
        var1 = func_06DA(var2);
        var0 = func_0D6A(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_0D6A(var arg0) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0d57;
        var var2 = arg0;
        return func_0D3A(var2);
    }
    
    function func_0D7F(var arg0, var arg1) {
        var var0 = 0x0d90;
        var var1 = 0x0d8b;
        var var2 = arg1;
        var1 = func_0657(var2);
        var0 = func_0D8B(var1);
        memory[arg0:arg0 + 0x20] = var0;
    }
    
    function func_0D8B(var arg0) returns (var r0) { return arg0; }
    
    function func_0D96(var arg0, var arg1, var arg2, var arg3) returns (var r0) {
        var var0 = 0x00;
        var var1 = 0x0da1;
        var var2 = arg3;
        var1 = func_0D0A(var2);
        var temp0 = var1;
        arg3 = temp0;
        var1 = 0x0dad;
        var2 = arg3;
        var var3 = arg0;
        func_0D5E(var2, var3);
        var temp1 = arg3 + 0x14;
        arg3 = temp1;
        var1 = 0x0dbd;
        var2 = arg3;
        var3 = arg1;
        func_0D7F(var2, var3);
        var temp2 = arg3 + 0x20;
        arg3 = temp2;
        var1 = 0x0dcd;
        var2 = arg3;
        var3 = arg2;
        func_0D7F(var2, var3);
        return arg3 + 0x20;
    }
}
